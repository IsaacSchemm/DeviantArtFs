@model DeviantArtFs.Examples.WebApp.Models.FeedModel
@{
    ViewData["Title"] = "Feed";
}

<h2>Feed</h2>

<label>
    <input type="checkbox" data-bind="checked: showDeviations" />
    Deviations
</label>
<label>
    <input type="checkbox" data-bind="checked: showJournals" />
    Journals
</label>
<label>
    <input type="checkbox" data-bind="checked: showStatuses" />
    Statuses
</label>
<label>
    <input type="checkbox" data-bind="checked: showCollectionUpdates" />
    Collection updates
</label>

<!-- ko foreach: toShow -->
<div style="border: 1px solid black; border-radius: 2px; margin-bottom: 8px" class="item">
    <div style="float: right; margin: 4px;">
        <small data-bind="text: timeAgo">
            Ts
        </small>
    </div>

    <!-- ko if: thumbnailUrl -->
    <a href="#" data-bind="attr: { href: url }">
        <img data-bind="attr: { src: thumbnailUrl }" alt="" style="float: left; width: 150px; min-height: 100px; max-height: 150px; object-fit: contain; margin-right: 8px" />
    </a>
    <!-- /ko -->

    <a href="#" data-bind="attr: { href: 'https://deviantart.com/' + username }"><img align="top" data-bind="attr: { src: usericon }" alt="" /></a>
    <b data-bind="text: username">Username</b>

    <!-- ko if: title -->
    &middot;
    <b>
        <a href="#" data-bind="attr: { href: url }, text: title">Title</a>
    </b>
    <!-- /ko -->
    <!-- ko if: htmlDescription -->
    <br />
    <br />
    <span data-bind="html: htmlDescription"></span>
    <!-- /ko -->

    <div style="clear: both"></div>
</div>
<!-- /ko -->

<div id="endOfItems"></div>

<!-- ko if: hasMore() -->
<hr />
<p align="center">
    <!-- ko if: gettingMore -->
    Loading...
    <!-- /ko -->
    <!-- ko if: !gettingMore() -->
    <a href="#" data-bind="click: getMore">Next</a>
    <!-- /ko -->
</p>
<!-- /ko -->

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.2/knockout-min.js"></script>
<script type="text/javascript">
    function shouldShow(f) {
        if (f.type == "deviation_submitted" && !model.showDeviations()) return false;
        if (f.type == "journal_submitted" && !model.showJournals()) return false;
        if (f.type == "status" && !model.showStatuses()) return false;
        if (f.type == "collection_update" && !model.showCollectionUpdates()) return false;
        return true;
    }

    var model = {
        cursor: ko.observable(null),
        items: ko.observableArray(),
        hasMore: ko.observable(true),
        gettingMore: ko.observable(false),
        getMore: async () => {
            if (model.gettingMore()) return;
            model.gettingMore(true);
            const url = model.cursor()
                ? `/Feed/Pull?cursor=${model.cursor()}`
                : `/Feed/Pull`;
            const page = await fetch(url, { credentials: "include" }).then(r => r.json());
            model.hasMore(page.hasMore);
            model.cursor(page.cursor);
            for (let item of page.items) {
                model.items.push(item);
            }
            model.gettingMore(false);
            if (page.items.some(shouldShow)) {
                checkScroll();
            }
        },
        toShow: ko.pureComputed(() => model.items().filter(shouldShow)),
        showDeviations: ko.observable(true),
        showJournals: ko.observable(true),
        showStatuses: ko.observable(true),
        showCollectionUpdates: ko.observable(false),
    };
    ko.applyBindings(model, document.body);

    function checkScroll() {
        if (window.scrollY + window.innerHeight > document.body.clientHeight - 500) {
            model.getMore();
        }
    }

    window.addEventListener("scroll", checkScroll);
    window.addEventListener("load", checkScroll);
</script>