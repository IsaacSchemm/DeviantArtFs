// <auto-generated />
using System;
using DeviantArtFs.Stash.Marshal.Examples.StashInterface.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeviantArtFs.Stash.Marshal.Examples.StashInterface.Migrations
{
    [DbContext(typeof(ExampleDbContext))]
    partial class ExampleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DeviantArtFs.Examples.StashInterface.Models.DeltaCursor", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<string>("Cursor")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.ToTable("DeltaCursors");
                });

            modelBuilder.Entity("DeviantArtFs.Examples.StashInterface.Models.StashEntry", b =>
                {
                    b.Property<int>("StashEntryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ItemId");

                    b.Property<string>("MetadataJson")
                        .IsRequired();

                    b.Property<int>("Position");

                    b.Property<long>("StackId");

                    b.Property<Guid>("UserId");

                    b.HasKey("StashEntryId");

                    b.ToTable("StashEntries");
                });

            modelBuilder.Entity("DeviantArtFs.Examples.StashInterface.Models.Token", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessToken")
                        .IsRequired();

                    b.Property<DateTimeOffset>("ExpiresAt");

                    b.Property<string>("RefreshToken")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
